# Import blocks for migrating GitHub resources to the new module
# Generated by Azure GitHub Environment Bootstrap migration script
#
# INSTRUCTIONS:
# 1. Run 'terraform plan' to see what will be imported
# 2. Run 'terraform apply' to execute the imports
# 3. After successful import, you can delete this file
#
# NOTE: These import blocks assume the standard PagoPA naming conventions
# If your environments use different names, adjust the import IDs accordingly

# Import the main GitHub repository
import {
  to = module.github_repository.github_repository.this
  id = local.repository.name
}

# Import additional repository resources
import {
  to = module.github_repository.github_actions_repository_permissions.repo
  id = local.repository.name
}

import {
  to = module.github_repository.github_branch_default.main
  id = local.repository.name
}

# Import infra_cd environment for prod
import {
  to = module.github_repository.github_repository_environment.infra_cd["prod"]
  id = "${local.repository.name}:infra-prod-cd"
}

# Import app_cd environment for prod
import {
  to = module.github_repository.github_repository_environment.app_cd["prod"]
  id = "${local.repository.name}:app-prod-cd"
}

# Import opex_cd environment for prod
import {
  to = module.github_repository.github_repository_environment.opex_cd["prod"]
  id = "${local.repository.name}:opex-prod-cd"
}

# Import infra_ci environment for prod
import {
  to = module.github_repository.github_repository_environment.infra_ci["prod"]
  id = "${local.repository.name}:infra-prod-ci"
}

# Import opex_ci environment for prod
import {
  to = module.github_repository.github_repository_environment.opex_ci["prod"]
  id = "${local.repository.name}:opex-prod-ci"
}

