spring_cors_origin=*
server.port=9090



spring.devtools.add-properties= true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

#Mongo
spring.data.mongodb.database=${MONGO_DATABASE}
spring.data.mongodb.uri=${MONGO_DATABASE_URI}
mongo.collection.name=${MONGO_COLLECTION_NAME}
mongo.collection.retry.name=${MONGO_RETRY_COLLECTION_NAME}


#INTEGRATION
payment.request = ${PROXY_ENDPOINT}

#CHECKPOINT CHUNK SIZE
checkpoint.size = ${CHECKPOINT_SIZE}

logging.level.root = WARN
logging.level.it.gov.pagopa = WARN

#parametri per numero tentativi
interval.function=${RETRY_INTERVAL_FUNCTION}
attempts.max=${RETRY_MAX_ATTEMPTS}

#parametri scheduler
scheduler.retrytonotify.cron-expression = ${QUARTZ_SCHEDULER_TIMER_NOTIFY}
scheduler.retrytonotify.size = ${SCHEDULER_RETRY_SIZE}
scheduler.retrytonotify.active = ${SCHEDULER_RETRY_ACTIVE}

value.deserializer.specific.avro.reader=true
spring.kafka.consumer.properties.specific.avro.reader=true

#bootstrap.servers.payment=${BOOTSTRAP_SERVER_PAYMENT}
security.protocol.payment=${SECURITY_PROTOCOL_PAYMENT}
sasl.mechanism.payment=${SASL_MECHANISM_PAYMENT}
#sasl.jaas.conf.payment=${SASL_JAAS_CONFIG_PAYMENT}

#date
pattern.local.date=yyyy-MM-dd

#TOPICS
kafka.message = ${KAFKA_MESSAGE}
kafka.paymentupdates = ${KAFKA_PAYMENT_UPDATES}
kafka.payment = ${KAFKA_PAYMENTS}

#QUEUE
kafka.topic.message = ${KAFKA_URL_MESSAGE}
bootstrap.servers.message= ${BOOTSTRAP_SERVER_MESSAGE}
kafka.topic.paymentupdates = ${KAFKA_URL_PAYMENTUPDATES}
bootstrap.servers.paymentupdates= ${BOOTSTRAP_SERVER_PAYMENTUPDATES}
kafka.topic.payment = ${KAFKA_URL_PAYMENT}
bootstrap.servers.payment = ${BOOTSTRAP_SERVER_PAYMENT}

enable_rest_key = ${ENABLE_REST_KEY}
proxy_endpoint_subscription_key = ${PROXY_ENDPOINT_SUBSCRIPTION_KEY}

message.auto.start=${IS_ACTIVE_MESSAGE_CONSUMER}
payment.auto.start=${IS_ACTIVE_PAYMENT_CONSUMER}

#============================================================================
# Configure Logging  
#============================================================================
logging.level.root=${MAIN_LOGGING_LEVEL}