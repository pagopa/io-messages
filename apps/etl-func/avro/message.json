{
  "name": "message",
  "type": "record",
  "namespace": "dto",
  "doc": "Kafka JS schema for cosmos api container 'messages'",
  "fields": [
    {
      "name": "schema_version",
      "doc": "An integer that indicates the version of the schema.",
      "type": "int"
    },
    {
      "name": "op",
      "type": {
        "type": "enum",
        "doc": "List of operations that can be done to a message. Messages are immutable so we can only perform create operations.",
        "name": "MessageCrudOperation",
        "symbols": ["CREATE"]
      }
    },
    {
      "name": "id",
      "doc": "An ULID that identifies the message inside the message collection.",
      "type": "string"
    },
    {
      "name": "sender_service_id",
      "doc": "The id of the service that sent the message.",
      "type": "string"
    },
    {
      "name": "sender_user_id",
      "doc": "The id of the user that sent the message.",
      "type": "string"
    },
    {
      "name": "is_pending",
      "doc": "A boolean that indicates if the message has been processed, is_pending equals false indicates that the message has not been processed yet.",
      "type": "boolean"
    },
    {
      "name": "subject",
      "doc": "The subject of the message.",
      "type": "string"
    },
    {
      "name": "content_type",
      "doc": "Indicates the type of the message.",
      "type": [
        "null",
        {
          "type": "enum",
          "name": "MessageContentType",
          "symbols": [
            "GENERIC",
            "PAYMENT",
            "EU_COVID_CERT",
            "SEND",
            "PAGOPA_RECEIPT"
          ]
        }
      ],
      "default": null
    },
    {
      "name": "payment_data_amount",
      "doc": "An integer that indicates the amount of the payment.",
      "type": ["null", "int"],
      "default": null
    },
    {
      "name": "payment_data_notice_number",
      "doc": "An id that identifies the the payment.",
      "type": ["null", "string"],
      "default": null
    },
    {
      "name": "payment_data_invalid_after_due_date",
      "doc": "A boolean that indicates if the payment is considered invalid after the due date.",
      "type": ["null", "boolean"],
      "default": null
    },
    {
      "name": "payment_data_payee_fiscal_code",
      "doc": "The fiscal code of the payee.",
      "type": ["null", "string"],
      "default": null
    },
    {
      "name": "require_secure_channels",
      "doc": "A boolean that indicates whether the message contains sensitive informations. If this value is true the push notification sent is anonymous and the email notification will not be sent.",
      "type": "boolean",
      "default": false
    },
    {
      "name": "timestamp",
      "doc": "A timestamp that indicates when the message was created.",
      "type": "long",
      "logicalType": "timestamp-millis"
    },
    {
      "name": "feature_level_type",
      "doc": "A field that indicates whether the message is PREMIUM or not.",
      "type": {
        "type": "enum",
        "name": "MessageFeatureLevelType",
        "symbols": ["STANDARD", "ADVANCED"]
      },
      "default": "STANDARD"
    },
    {
      "name": "recipient_id",
      "doc": "Tokenized fiscal code of the citizen.",
      "type": "string"
    },
    {
      "name": "configuration_id",
      "doc": "An ULID that identifies the remote content configuration.",
      "type": "string"
    },
    {
      "name": "has_remote_content",
      "doc": "A boolean that indicates whether the message has remote content or not.",
      "type": "boolean",
      "default": false
    },
    {
      "name": "has_precondition",
      "doc": "A boolean that indicates whether the message has remote precondition or not.",
      "type": "boolean",
      "default": false
    },
    {
      "name": "has_attachments",
      "doc": "A boolean that indicates whether the message has remote attachments or not.",
      "type": "boolean",
      "default": false
    }
  ]
}
